a=(1,2,3,4,5)
a = (1,2,3,4,5)
a<-(1,2,3,4,5)
help()
help(=)
a <- (1,2,3,4,5)
a <-(1,2,3,4,5)
a=c(1,2,3,4,5)
mean(a)
sum(a)
help(functions)
help(function)
help()
r=rnorm(100)
plot (r)
body <- read.delim("~/Desktop/Courses/ST 512/LAB/body.txt")
View(body)
min(body$age)
min(body$age(body$gender=="male"))
min(body$age[body$gender=="male"])
min(body$age[body$gender=="Male"])
plot(body$height[body$gender=="Female"])
min(body$age)
max(body$age)
mean(body$age)
var(body$height)
a=var(body$height)
sqrt(a)
length(body$age)
body$age
cor(body$height,body$weight)
sqrt(a)/sqrt(507)
sqrt(a)/sqrt(407)
sqrt(a)/sqrt(507)
min(body$age)
max(body$height)
mean(body$age)
cor(body$height, body$weight)
sqrt(var(body$weight))
a=sqrt(cor(body$weight))
a=sqrt(var(body$weight))
sqrt(var(body$weight))
sqrt(a)/sqrt(507)
a/sqrt(507)
mean(body$height[gender=="Male"])
mean(body$height[body$gender=="Male"])
mean(body$height[body$gender=="Male"])
help(t.test)
t.test (height~gender, data=body)
t.test (height~gender, data=body)
t.test (age~gender, data=body)
t.test (weight~gender, data=body)
plot(weight~height, data=body)
help(slr)
help(slr)
slr <- lm(weight ~ height, data=body)
summary(slr)
help(slr)
help(??slr)
abline(weight~height, data=body)
abline(slr)
abline(lm(weight~height, data=body))
abline(lm[weight~height, data=body])
lm(weight~height, data=body)
abline(slr)
help(package=graphics)
abline(slr)
stripchart(body$height ~ body$gender, method="jitter")
abline(slr)
abline(slr)
plot(weight ~ height, data=body)
slr <- lm(weight ~ height, data=body)
abline(slr)
> abline(slr)
plot(weight ~ height, data=body)
abline(slr)
sd(-105.011)
sd(body$height)
sd(body$weight)
a/sqrt(507)
ESE = sd(body$weight)/sqrt(length(age))
sd(body$weight)/sqrt(length(age))
sd(body$weight)/sqrt(length(body$age))
summary(slr)
sd(body$weight)/sqrt(length(body$age))
ESE = sd(body$weight)/sqrt(length(body$age))
ESE = sd(body$height)/sqrt(length(body$age))
t.test (height~gender, data=body)
summary(body)
summary(slr)
Se=9.308
MSE = Se*Se
MSE = Se*Se
MSE = 9.308*9.308
MSE = 9.308^2
9.308^2
MSE = 86.63886
SSE = MSE*505
MSE <- 86.63886
SSE = MSE*505
SSE <- MSE*505
2*3
SSE <- MSE*505
MSE*505
SST<-43752
SSE<-43752
slr <- lm(weight ~ height, data=body)
slr <- lm(weight ~ height, data=body)
summary(slr)
pt(0.4005,df=505,lower=FALSE)
new.data<‐data.frame(height=160)
newdata<‐data.frame(height=160)
new.data<‐data.frame(height=160)
new.data<‐data.frame(height=160)
body <- read.delim("~/Desktop/Courses/ST 512/LAB/body.txt")
View(body)
new.data<‐data.frame(height=160)
new.data<‐data.frame(height=160)
new.data<‐data.frame(height=160)
new.data<‐data.frame(height=160)
sumarry(body)
summary(body)
ls()
new.data<‐data.frame(height=180)
new.data<‐data.frame(height=180)
new.data<‐data.frame(height=160)
abc.data<‐data.frame(height=160)
abc.data=data.frame(height=160)
new.data=data.frame(height=160)
predict(slr,interval="prediction",newdata=new.data,level=.90)
predict(slr1,interval="confidence",newdata=new.data,level=.90)
predict(slr,interval="confidence",newdata=new.data,level=.90)
slr = lm(weight ~ height, data=body)
summary(slr)
predict(slr,interval="confidence",newdata=new.data,level=.90)
summary(slr)
plot(slr)
body$height2 <‐ body$height / 2.54
body$height22 <‐ body$height / 2.54
body$height2 = body$height / 2.54
summary(slr)
body$weight2 <‐ body$weight * 2.2
body$weight <‐ body$weight * 2.2
body$height2 = body$height / 2.54
body$weight2 = body$weight * 2.2
summary(body)
slr = lm(weight2 ~ height2, data=body)
summary(slr)
help(as.date)
??as.date
x <- 01-01-2015
x
x
y <- 01
y
y <- 01-01
y
x <- (01-01-2015)
x
x <- as.date(01-01-2015)
x <- as.Date(01-01-2015)
x <- 2015-01-01
x
x <- as.Date("2015-01-01")
x
unclass(x)
??date
x <- data.frame(a = 1, b = 2, c = 3)
x
x <- data.frame(a = c(1, 2, 3, 4, 5, 6), b = (7, 8, 9, 10, 11, 12), c = (3, 4, 5, 6, 7, 8))
x <- data.frame(a = c(1, 2, 3, 4, 5, 6) b = (7, 8, 9, 10, 11, 12) c = (3, 4, 5, 6, 7, 8))
x <- data.frame(a = c(1, 2, 3, 4, 5, 6), b = (7, 8, 9, 10, 11, 12), c = (3, 4, 5, 6, 7, 8))
x <- data.frame(a = c(1, 2, 3, 4, 5, 6), b = c(7, 8, 9, 10, 11, 12), c = c(3, 4, 5, 6, 7, 8))
x
dim(x)
?POSIXct
z <- sys.time()
z <- Sys.time()
z
POSIXct(z)
p <- as.POSIXct(z)
p
p <- as.POSIXlt(z)
p
x <- ("2015-01-15")
as.POSIXct(x)
unclass(as.POSIXct(x))
??unclass
x <- ("2015-01-15")
unclass(as.POSIXlt(x))
??$
help($)
$x
x$
as
$
x <- matrxi(11:19, 3, 3)
x <- matrix(11:19, 3, 3)
y <- c("e", "d", "c", "b", "a")
class(y)
class(x)
z <- list("a", 2, "*", 345)
a <- list (x, y, z)
print(a)
a[1]
a[[1]]
a$1
a$[1]
a$x
a$y
a$x
a[[2]]
$x
a[[z]]
a[[3]]
a[3]
a[[1]][[3]]
a[[2]][[3]]
a[[c(1, 2, 3)]]
a[[1]][[2]][[3]]
a[[1]][[c(3, 1)]]
c <- Sys.time
print (c)
c <- Sys.time()
c
b <- as.POSIXlt(c)
b
b$sec
x <- c("10 January 2015, 13:02")
y <- strptime(x, "%d %B %Y, %H:%M")
y
class(y)
z <- as.date("2016-03-15")
z <- as.Date("2016-03-15")
z > y
class(z)
POSIXlt(z) > y
z` <- as.POSIXlt(z)
exit()
exit();
exit
sdsd
func90
quit
quit():
quit();
z > y
pollutantmean <- function(directory, pollutant = "", id) {
if (directory == "specdata") {directory = "/Users/shantanupawar/Desktop/Coursera/R-programming/directory"}
setwd (directory)
if (length(id) > 1){
x <- dir()
n = length(id)
means = vector(mode = "numeric", length = n)
z <- 1
for (i in id) {
file = read.csv(x[i])
if (pollutant == "nitrate")
{means[z] <- mean(file[ ,3], na.rm = TRUE); z = z + 1}
else {means[z] <- mean(file[ ,2], na.rm = TRUE); z = z + 1}
}
}
else {
x <- dir()
file = read.csv(x[id])
n = nrow(file)
means = vector(mode = "numeric", length = n)
if (pollutant == "nitrate")
{means <- mean(file[ ,3], na.rm = TRUE)}
else {means <- mean(file[ ,2], na.rm = TRUE)}
}
print(mean(means, na.rm = TRUE))
}
pollutantmean ("specdata", "sulfate", 1:10)
getwd()
pollutantmean <- function(directory, pollutant = "", id) {
if (directory == "specdata") {directory = "/Users/shantanupawar/Desktop/Coursera/R-programming/directory"}
setwd (directory)
if (length(id) > 1){
x <- dir()
n = length(id)
means = vector(mode = "numeric", length = n)
z <- 1
for (i in id) {
file = read.csv(x[i])
if (pollutant == "nitrate")
{means[z] <- mean(file[ ,3], na.rm = TRUE); z = z + 1}
if (pollutant == "nitrate") {means[z] <- mean(file[ ,2], na.rm = TRUE); z = z + 1}
}
}
else {
x <- dir()
file = read.csv(x[id])
n = nrow(file)
means = vector(mode = "numeric", length = n)
if (pollutant == "nitrate")
{means <- mean(file[ ,3], na.rm = TRUE)}
if (pollutant == "nitrate") {means <- mean(file[ ,2], na.rm = TRUE)}
}
print(mean(means, na.rm = TRUE))
}
pollutantmean ("specdata", "sulfate", 1:10)
